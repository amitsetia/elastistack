input { 
  beats {
    port => 5044
  }
}

filter {
  if "nginx" in [tags] {
   grok {
     match => { "message" => ["%{IPORHOST:clientip} %{USER: name} %{USER: auth} \[%{HTTPDATE: time}\] \"%{WORD: verb} %{URIPATHPARAM:request} HTTP/%{NUMBER:httpversion}\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) (?:(?:%{URI:referrer}|-)|%{QS:referrer}) %{QS:agent}"] }
   }
  
  geoip {
      source => "clientip"
    }

 }
 
 if "apache" in [tags] {
   grok {
     match => { "message" => "%{COMBINEDAPACHELOG}" }
  }
 }
 
  if "haproxy" in [tags] {
    grok {
      match => { "message" => ["%{SYSLOGTIMESTAMP:syslog_timestamp} %{IPORHOST:syslog_server} %{SYSLOGPROG}: %{IP:client_ip}:%{INT:client_port:int} \[%{HAPROXYDATE:accept_date}\] %{NOTSPACE:frontend_name} %{NOTSPACE:backend_name}/%{NOTSPACE:server_name} %{INT:time_request:int}/%{INT:time_queue:int}/%{INT:time_backend_connect:int}/%{INT:time_backend_response:int}/%{INT:time_duration:int} %{INT:http_status_code:int} %{NOTSPACE:bytes_read} %{DATA:captured_request_cookie} %{DATA:captured_response_cookie} %{NOTSPACE:termination_state} %{INT:actconn:int}/%{INT:feconn:int}/%{INT:beconn:int}/%{INT:srvconn:int}/%{NOTSPACE:retries} %{INT:srv_queue:int}/%{INT:backend_queue:int} \"(<BADREQ>|(%{WORD:http_verb} (%{URIPROTO:http_proto}://)?(?:%{USER:http_user}(?::[^@]*)?@)?(?:%{URIHOST:http_host})?(?:%{URIPATHPARAM:http_request})?( HTTP/%{NUMBER:http_version})?))?\""] }
    }
  }



    mutate {
    replace => { "tag" => "%{service_name}" }
}

}
output {
  elasticsearch { 
    hosts => ["http://localhost:9200"]
#    index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
    index => "%{tag}-%{+YYYY.MM.dd}"
  }
}
